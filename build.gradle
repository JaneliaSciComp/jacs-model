plugins {
    id "com.github.hierynomus.license" version "0.15.0"
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    group = 'org.janelia.jacs-model'
    version = '2.0.2'
}

subprojects {
    apply from: "${rootDir}/deps.gradle"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    afterEvaluate {
        repositories {
            mavenLocal()
            mavenCentral()
            maven {
                url "https://nexus.janelia.org/repository/maven-releases"
            }
            maven {
                url "https://nexus.janelia.org/repository/maven-snapshots"
            }
        }

        compileJava {
            doFirst {
                options.compilerArgs = [
                        '-Xlint:deprecation',
                        '-Xlint:unchecked'
                ]
            }
        }

        compileTestJava {
            doFirst {
                options.compilerArgs = [
                        '-Xlint:deprecation',
                        '-Xlint:unchecked'
                ]
            }
        }
    }

    task sourceJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = 'sources'
    }

    test {
        exclude '**/SampleDAOTest.class'
        exclude '**/SubjectDAOTest.class'
        exclude '**/SampleLockTests.class'
        exclude '**/OntologyMongoDaoTest.class'
        exclude '**/SummaryMongoDaoTest.class'
    }

    publishing {
        publications {
            mavenJar(MavenPublication) {
                from components.java
                artifact sourceJar
            }
        }
        ext {
           if (!project.hasProperty('mavenRepoUser')) {
              mavenRepoUser = ''
           }
           if (!project.hasProperty('mavenRepoPassword')) {
              mavenRepoPassword = ''
           }
        }
        repositories {
            maven {
                def releasesRepoUrl = 'https://nexus.janelia.org/repository/maven-releases'
                def snapshotsRepoUrl = 'https://nexus.janelia.org/repository/maven-snapshots'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                credentials {
                    username "${mavenRepoUser}"
                    password "${mavenRepoPassword}"
                }
            }
        }
    }

}

license {
    header rootProject.file('LICENSE.md')
    exclude "**/*"
}

downloadLicenses {
    includeProjectDependencies = true
    dependencyConfiguration = 'compile'
}

task updateWrapper(type: Wrapper) {
    gradleVersion = "5.1.1"
}
