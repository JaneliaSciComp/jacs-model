project(":jacs-model-access") {

    sourceSets {
        integrationTest {
            compileClasspath += sourceSets.main.output + sourceSets.test.output
            runtimeClasspath += sourceSets.main.output + sourceSets.test.output
        }
    }

    configurations {
        integrationTestImplementation.extendsFrom(testImplementation)
        integrationTestRuntimeOnly.extendsFrom(testRuntimeOnly)
        integrationTestRuntimeElements.extendsFrom(integrationTestImplementation, integrationTestRuntimeOnly)
    }

    compileIntegrationTestJava {
        doFirst {
            options.compilerArgs = [
                    '-Xlint:deprecation',
                    '-Xlint:unchecked'
            ]
        }
    }

    dependencies {
        api project(':jacs-model-core')

        implementation JAKARTA_CDI_API_LIB,
                       JACKSON_DATABIND_LIB,
                       JACKSON_DATATYPE_JODA_LIB,
                       JONGO_LIB,
                       MONGODB_SYNC_DRIVER_LIB,
                       MONGODB_LEGACY_DRIVER_LIB,
                       REFLECTIONS_LIB,
                       SOLR_SEARCH_LIB

        integrationTestImplementation SLF4J_LIB,
                                      LOGBACK_CLASSIC_LIB

    }

    idea {
        module {
            downloadSources = true
            downloadJavadoc = true

            scopes.TEST.plus += [
                    configurations.integrationTestRuntimeElements
            ]
        }
    }

    tasks.register('integrationTest', Test) {
        testClassesDirs = sourceSets.integrationTest.output.classesDirs
        classpath = sourceSets.integrationTest.runtimeClasspath

        systemProperties(System.getProperties())

        shouldRunAfter(test)

        useJUnitPlatform()
    }

}
